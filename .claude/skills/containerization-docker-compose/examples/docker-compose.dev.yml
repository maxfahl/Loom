
# docker-compose.dev.yml
# Docker Compose configuration for local development environment.
# This setup includes hot-reloading for the Node.js application and a PostgreSQL database.

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.optimized # Use the optimized Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./app:/app/app # Bind mount for hot-reloading source code
      - /app/node_modules # Keep node_modules inside container
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://user:password@db:5432/mydatabase
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app/app
          ignore: [node_modules/]
        - action: rebuild
          path: ./app/package.json
          target: /app/app/package.json

  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db_data:
