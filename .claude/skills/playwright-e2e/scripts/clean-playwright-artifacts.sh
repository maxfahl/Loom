#!/bin/bash

# clean-playwright-artifacts.sh
#
# Purpose:
#   Removes Playwright-generated test artifacts such as test results, screenshots,
#   videos, and traces. This helps in keeping the project directory clean and
#   managing disk space, especially after multiple test runs or in CI/CD environments.
#
# Usage:
#   ./clean-playwright-artifacts.sh [--dry-run]
#
# Arguments:
#   --dry-run: Optional. If present, the script will only list the files and directories
#              that *would* be deleted, without actually deleting them.
#
# Examples:
#   ./clean-playwright-artifacts.sh
#   ./clean-playwright-artifacts.sh --dry-run
#
# Features:
#   - Targets common Playwright output directories and files.
#   - Includes a dry-run mode for safety.
#   - Provides clear console output with color.
#
# Configuration:
#   The script targets directories and files typically configured in `playwright.config.ts`
#   or generated by default. Adjust `ARTIFACT_PATHS` if your project uses different paths.

set -euo pipefail

# --- Configuration ---
# Paths to Playwright artifacts relative to the project root
ARTIFACT_PATHS=(
  "test-results"    # Default directory for test results, traces, videos, screenshots
  "playwright-report" # Default directory for HTML report
  "screenshots"     # Custom screenshot directory if configured
  "videos"          # Custom video directory if configured
  "traces"          # Custom trace directory if configured
  "*.json"          # Any stray JSON reports
)

# --- Helper Functions ---

# Function to display script usage
usage() {
  echo "Usage: $0 [--dry-run]"
  echo ""
  echo "Arguments:"
  echo "  --dry-run: Optional. If present, the script will only list the files and directories"
  echo "             that *would* be deleted, without actually deleting them."
  echo ""
  echo "Examples:"
  echo "  $0"
  echo "  $0 --dry-run"
  exit 1
}

# Function to print messages in color
print_color() {
  local color="$1"
  local message="$2"
  case "$color" in
    "red")    echo -e "\033[0;31m${message}\033[0m" ;;
    "green")  echo -e "\033[0;32m${message}\033[0m" ;;
    "yellow") echo -e "\033[0;33m${message}\033[0m" ;;
    "blue")   echo -e "\033[0;34m${message}\033[0m" ;;
    *)        echo "${message}" ;;
  esac
}

# --- Main Script Logic ---

DRY_RUN=false

# Parse arguments
for arg in "$@"
do
  case "$arg" in
    --dry-run)
      DRY_RUN=true
      shift
      ;;
    -*)
      print_color "red" "Unknown option: $arg"
      usage
      ;;
  esac
done

if "${DRY_RUN}"; then
  print_color "yellow" "DRY RUN: The following files/directories would be deleted:"
else
  print_color "blue" "Cleaning Playwright artifacts..."
fi

FOUND_ARTIFACTS=false
for path in "${ARTIFACT_PATHS[@]}"; do
  if compgen -G "$path" > /dev/null; then
    FOUND_ARTIFACTS=true
    if "${DRY_RUN}"; then
      print_color "yellow" "  - $path"
    else
      print_color "yellow" "Deleting: $path"
      rm -rf "$path"
    fi
  fi
done

if ! "${FOUND_ARTIFACTS}"; then
  print_color "blue" "No Playwright artifacts found to clean."
elif "${DRY_RUN}"; then
  print_color "yellow" "Dry run complete. No files were actually deleted."
else
  print_color "green" "Playwright artifacts cleaned successfully!"
fi
