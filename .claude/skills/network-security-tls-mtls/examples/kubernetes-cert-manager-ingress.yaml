apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-app-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod # Assumes cert-manager is installed and configured
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS" # If your backend service also uses HTTPS
spec:
  tls:
  - hosts:
    - myapp.example.com # Replace with your domain
    secretName: myapp-tls # cert-manager will store the certificate here
  rules:
  - host: myapp.example.com # Replace with your domain
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-app-service # Name of your Kubernetes Service
            port:
              number: 8080 # Port of your Kubernetes Service

---
# Example ClusterIssuer for cert-manager (for Let's Encrypt production environment)
# You would typically define this once per cluster.
# apiVersion: cert-manager.io/v1
# kind: ClusterIssuer
# metadata:
#   name: letsencrypt-prod
# spec:
#   acme:
#     email: your-email@example.com # Replace with your email
#     server: https://acme-v02.api.letsencrypt.org/directory
#     privateKeySecretRef:
#       name: letsencrypt-prod-account-key
#     solvers:
#     - http01:
#         ingress:
#           class: nginx
